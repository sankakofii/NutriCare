// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NutriCare.Models;

#nullable disable

namespace NutriCare.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221212153929_CreateInitial")]
    partial class CreateInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NutriCare.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<int?>("AllergiesAllergyId")
                        .HasColumnType("int");

                    b.Property<int?>("DiabetesId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IntoleranceId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Password")
                        .HasColumnType("tinyint");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountId");

                    b.HasIndex("AllergiesAllergyId");

                    b.HasIndex("DiabetesId");

                    b.HasIndex("IntoleranceId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("NutriCare.Models.Allergy", b =>
                {
                    b.Property<int>("AllergyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AllergyId"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AllergyId");

                    b.ToTable("Allergy");
                });

            modelBuilder.Entity("NutriCare.Models.Diabetes", b =>
                {
                    b.Property<int>("DiabetesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiabetesId"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DiabetesId");

                    b.ToTable("Diabetes");
                });

            modelBuilder.Entity("NutriCare.Models.Intolerance", b =>
                {
                    b.Property<int>("IntoleranceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntoleranceId"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntoleranceId");

                    b.ToTable("Intolerance");
                });

            modelBuilder.Entity("NutriCare.Models.Account", b =>
                {
                    b.HasOne("NutriCare.Models.Allergy", "Allergies")
                        .WithMany()
                        .HasForeignKey("AllergiesAllergyId");

                    b.HasOne("NutriCare.Models.Diabetes", "Diabetes")
                        .WithMany()
                        .HasForeignKey("DiabetesId");

                    b.HasOne("NutriCare.Models.Intolerance", "Intolerance")
                        .WithMany()
                        .HasForeignKey("IntoleranceId");

                    b.Navigation("Allergies");

                    b.Navigation("Diabetes");

                    b.Navigation("Intolerance");
                });
#pragma warning restore 612, 618
        }
    }
}
